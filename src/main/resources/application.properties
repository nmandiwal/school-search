spring.social.facebook.appId=${fbappid}
spring.social.facebook.appSecret=${fbsecret}
spring.thymeleaf.cache=false
server.port=443
#server.ssl.key-alias=https-example
server.ssl.key-alias=tomcat

server.ssl.key-store-type=JKS
#server.ssl.key-store-type=PKCS12

server.ssl.key-store-password=${jkspassword}

#server.ssl.key-store=classpath:https-example.jks
server.ssl.key-store=classpath:ks.jks
#server.ssl.key-store=classpath:keystore.pkcs12

#spring.datasource.url=jdbc:mysql://docker-mysql:3306/school_search
spring.datasource.url=jdbc:mysql://${mhost}:3306/school_search
spring.datasource.username=${muser}
spring.datasource.password=${mpassword}

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
#spring.datasource.initialization-mode=always
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

logging.level.root=INFO